{"uuid":"92f79e1d-99d3-46d6-9759-5726e6b4c944","historyId":"e008042ad7f35402d0fde3f2758aedad","testCaseId":"41e1c9bdc8317b3dee4733a4447f978f","fullName":"src/test/java/features/web/E2ECheckout.feature:11","labels":[{"name":"tag","value":"Regression"},{"name":"tag","value":"Regression_FE"},{"name":"host","value":"E1611833"},{"name":"thread","value":"42696@E1611833.TestNG-tests-2(20)"},{"name":"feature","value":"Purchase affordable video games from Amazon Egypt"},{"name":"story","value":"Add all video games under 15,000 EGP with filters and verify cart summary"},{"name":"suite","value":"Purchase affordable video games from Amazon Egypt"},{"name":"testClass","value":"Add all video games under 15,000 EGP with filters and verify cart summary"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///Users/amr.elgarhy/Documents/GitHub/Foodics-AutomationTask/src/test/java/features/web/E2ECheckout.feature"},{"name":"package","value":"src.test.java.features.web.E2ECheckout_feature.Purchase affordable video games from Amazon Egypt"}],"links":[],"name":"Add all video games under 15,000 EGP with filters and verify cart summary","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected [Price: High to Low] but found [Bestselling]","trace":"java.lang.AssertionError: expected [Price: High to Low] but found [Bestselling]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:656)\n\tat org.testng.Assert.assertEquals(Assert.java:666)\n\tat org.testng.asserts.Assertion$11.doAssert(Assertion.java:186)\n\tat org.testng.asserts.Assertion.executeAssert(Assertion.java:25)\n\tat org.testng.asserts.Assertion.doAssert(Assertion.java:12)\n\tat org.testng.asserts.Assertion.assertEquals(Assertion.java:182)\n\tat utiltites.assertions.Assert.textToBe(Assert.java:32)\n\tat pages.web.categoryResultPage.assertSortProductsPromptApplied(categoryResultPage.java:177)\n\tat steps.web.cartCheckout_StepDef.validateThatSortingProductFilterAppliedWith(cartCheckout_StepDef.java:88)\n\tat ✽.Validate that sorting product filter applied with \"Price: High to Low\"(file:///Users/amr.elgarhy/Documents/GitHub/Foodics-AutomationTask/src/test/java/features/web/E2ECheckout.feature:17)\n"},"stage":"finished","description":"  As a registered user\n  I want to browse and purchase video games under a budget\n  So that I can buy affordable games with preferred shipping and payment options","steps":[{"name":"Then Validate that user lands on amazon website","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573513261,"stop":1747573513276},{"name":"When User navigates to the \"Video Games\" section from the main menu","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573513276,"stop":1747573596991},{"name":"Then Validate that user lands on \"Video Games\" section","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573596991,"stop":1747573617153},{"name":"And User applies filters [Free Shipping] and [Condition: \"New\"]","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573617154,"stop":1747573659663},{"name":"Then Validate that selected filters are applied and checked","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659663,"stop":1747573659692},{"name":"And User sorts the product list by \"Price: High to Low\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659692,"stop":1747573659729},{"name":"Then Validate that sorting product filter applied with \"Price: High to Low\"","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected [Price: High to Low] but found [Bestselling]","trace":"java.lang.AssertionError: expected [Price: High to Low] but found [Bestselling]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:656)\n\tat org.testng.Assert.assertEquals(Assert.java:666)\n\tat org.testng.asserts.Assertion$11.doAssert(Assertion.java:186)\n\tat org.testng.asserts.Assertion.executeAssert(Assertion.java:25)\n\tat org.testng.asserts.Assertion.doAssert(Assertion.java:12)\n\tat org.testng.asserts.Assertion.assertEquals(Assertion.java:182)\n\tat utiltites.assertions.Assert.textToBe(Assert.java:32)\n\tat pages.web.categoryResultPage.assertSortProductsPromptApplied(categoryResultPage.java:177)\n\tat steps.web.cartCheckout_StepDef.validateThatSortingProductFilterAppliedWith(cartCheckout_StepDef.java:88)\n\tat ✽.Validate that sorting product filter applied with \"Price: High to Low\"(file:///Users/amr.elgarhy/Documents/GitHub/Foodics-AutomationTask/src/test/java/features/web/E2ECheckout.feature:17)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659729,"stop":1747573659739},{"name":"And User adds all products priced below 15000 EGP to my shopping cart","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739},{"name":"When User navigates to shopping Cart","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739},{"name":"Then Validate that user lands on \"Shopping Cart\"","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739},{"name":"And Validate that all selected products reflected in my cart","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739},{"name":"When User provides my delivery address and choose \"Cash\" as the payment method","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739},{"name":"Then the total amount including any shipping fees should match the sum of selected items","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747573659739,"stop":1747573659739}],"attachments":[],"parameters":[],"start":1747573513261,"stop":1747573659740}